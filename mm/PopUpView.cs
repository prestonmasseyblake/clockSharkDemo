// This file has been autogenerated from a class added in the UI designer.

using System;
using CoreGraphics;
using Foundation;
using MapKit;
using UIKit;
using CoreLocation;
using Xamarin.Essentials;

namespace mm
{
	public partial class PopUpView : UIViewController
	{
        double myLat;
        double myLong;

        async void GetUserLocation()
        {
            try
            {
                var location = await Geolocation.GetLastKnownLocationAsync();

                if (location != null)
                {
                    myLat = location.Latitude;
                    myLong = location.Longitude;
                    Console.WriteLine($"Latitude: {location.Latitude}, Longitude: {location.Longitude}, Altitude: {location.Altitude}");
                }
            }
            catch (FeatureNotSupportedException fnsEx)
            {
                // Handle not supported on device exception
            }
            catch (FeatureNotEnabledException fneEx)
            {
                // Handle not enabled on device exception
            }
            catch (PermissionException pEx)
            {
                // Handle permission exception
            }
            catch (Exception ex)
            {
                // Unable to get location
            }
        }


        public PopUpView (IntPtr handle) : base (handle)
		{
		}
        
        UILabel label1;
        MKMapView map;
        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            Console.WriteLine("Popup view loaded");
            //var okAlertController = UIAlertController.Create("Title", "The message", UIAlertControllerStyle.Alert);

            ////Add Action
            //okAlertController.AddAction(UIAlertAction.Create("OK", UIAlertActionStyle.Default, null));

            //// Present Alert
            //PresentViewController(okAlertController, true, null);
            var frame = new CGRect(10, 10, 300, 30);
            label1 = new UILabel(frame);
            label1.Text = "New Label";
            View.Add(label1);
            GetUserLocation();

            map = new MKMapView(UIScreen.MainScreen.Bounds);
            double lat = 37.785834;
            double lon = -122.406417;
            CLLocationCoordinate2D mapCenter = new CLLocationCoordinate2D(myLat, myLong);
            MKCoordinateRegion mapRegion = MKCoordinateRegion.FromDistance(mapCenter, 100, 100);
            map.CenterCoordinate = mapCenter;
            map.Region = mapRegion;
            map.MapType = MKMapType.Standard;
            //map.ShowsUserLocation = true;
            map.ZoomEnabled = false;
            map.ScrollEnabled = false;
            map.AddAnnotations(new ClockInLocation("Clock In Location", mapCenter));
            View.Add(map);



            // Perform any additional setup after loading the view, typically from a nib.
        }

        public override void DidReceiveMemoryWarning()
        {
            base.DidReceiveMemoryWarning();
            // Release any cached data, images, etc that aren't in use.
        }
    }
}
